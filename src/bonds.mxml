<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   width="800" height="600" minWidth="800" minHeight="600"
			   viewSourceURL="srcview/index.html">
<fx:Script>
	<![CDATA[
		import flashx.textLayout.formats.Float;
		
		import mx.controls.Image;
		import mx.core.BitmapAsset;
		
		import spark.skins.spark.ImageSkin;
		
		
		private var isDown:Boolean;
		private var currTarget:Element;
		private var lastTarget:Element;
		private var startX:Number 
		private var startY:Number;
		private var isMoveMode:Boolean;
		
		
		
		public function init():void{
		
			isDown = false;
			isMoveMode = true;
			field.addEventListener(MouseEvent.CLICK, onStageClick,true,10);
		}
		
		private function onStageClick():void{
			field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
			currTarget=null;
			lastTarget=null;
		}
		

		
		private function onBoardMouseClick(name:String):void{
			trace("clicked on ",name);

			if(currTarget!=null){
				currTarget.Unselect();
				currTarget = null;
			}
			if(lastTarget!=null){
				lastTarget.Unselect();
				lastTarget = null;
			}
			stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
		var _source:String = "";
		var isFound:Boolean=true;
			
					_source= "assets/_"+name+".png";

				
				var img : Element = new Element(_source, 3);
				img.addEventListener(MouseEvent.CLICK, ChooseElement);
				board.addChild(img as DisplayObject);

		}
		
		
		
		private function ChooseElement(e:MouseEvent){
			var target:Element  = e.target.parent;
			if (target==null){
				currTarget.Unselect();
				currTarget = null;
				lastTarget.Unselect();
				lastTarget = null;
			}
			else if(target==currTarget){
				target.Unselect();
				currTarget=null;
				
			}
			else if(target==lastTarget){
				target.Unselect();
				currTarget=target;
			}
			else{
				
				
				if(lastTarget!=null){
					lastTarget.Unselect();
				}
				lastTarget=currTarget;
				currTarget  = target;
				currTarget.Select();
			}
			
			if(e.shiftKey){
			startDrawingBond();
			}
			else{
				isDown=true;
				field.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
				field.addEventListener(MouseEvent.MOUSE_UP, onElementMouseUp);
			}
		}
		
	
		
		/** przeciaganie pierwiastkÃ³w */
		private function onMouseMove(e:MouseEvent):void
		{
			//	currTarget.RemoveAllBonds();
		
			if(currTarget == null){
				isDown=false;
				field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
			}
			if(isDown) {
				currTarget.x = board.mouseX-46;
				currTarget.y=board.mouseY-46;
				
				for each (var bond:Bond  in currTarget.bonds){
					bond.graphics.clear();
					bond.graphics.lineStyle(5, 0xFF0000, 1);
					bond.graphics.moveTo(bond.curr.x+50, bond.curr.y+50);
					bond.graphics.lineTo(bond.last.x+50, bond.last.y+50);
				}
			}
	
			
		}
		

		private function onElementMouseUp(e:MouseEvent):void{
			field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
			field.removeEventListener(MouseEvent.MOUSE_UP, onElementMouseUp);
			isDown=false;
			
			
		}
		
	
		
		private function startDrawingBond(){
			
			if(lastTarget!=null&& lastTarget!=currTarget && currTarget!=null){
				if(lastTarget.isAvalibleBonds() && currTarget.isAvalibleBonds()){
				var bond:Bond = new Bond(currTarget,lastTarget);
				board.addChild(bond);
				bond.graphics.moveTo(currTarget.x+50, currTarget.y+50);
				bond.graphics.lineTo(lastTarget.x+50, lastTarget.y+50);
				bond.addEventListener(MouseEvent.CLICK, onBondClick);
				}
				else{
					trace("maximum bonds");
				}
			}
			
		}
		
		
		private function onBondClick(e:MouseEvent){
			var target = e.target as Bond;
			target.removeEventListener(MouseEvent.CLICK, onBondClick);
			target.RemoveBond();
		}
		
			private function onKeyDown(e:KeyboardEvent):void{
				
				if(e.keyCode==Keyboard.DELETE){
					DeleteCurrent();
					
				}
			}
		
		private function DeleteCurrent():void{
			if(currTarget!=null){
				currTarget.RemoveAllBonds();
				currTarget.parent.removeChild(currTarget as DisplayObject);
				currTarget=null;
			}
		}
		
		private function Check():void{
						
			
		}
		
		
		protected function onReadyClick():void{
			//wywolanie okna z wynikiem?
			board.enabled = false;
			Check();
		}
		
	]]>
</fx:Script>
	
	
	<s:BorderContainer left="0" right="0" top="0" bottom="0" horizontalCenter="0" verticalCenter="0" initialize="init">
		<s:VGroup left="0" right="0" top="0" bottom="0" horizontalAlign="center" horizontalCenter="0"
				  verticalAlign="top" verticalCenter="0">
			<s:HGroup id="field" x="191" width="600" height="400" horizontalAlign="right"
					  verticalAlign="bottom">
				<local:Main id="board" x="4" y="0" width="600" height="400">
				</local:Main>
					<s:Image x="555" y="349" width="42" height="42" click="DeleteCurrent()"
							 source="assets/bin.png"/>
			</s:HGroup>
			<s:HGroup id="imgGroup" x="165" horizontalAlign="center" verticalAlign="middle">
				<s:Image source="assets/H.png" click="onBoardMouseClick('h')"/>
				<s:Image source="assets/C.png" click="onBoardMouseClick('c')"/>
				<s:Image source="assets/N.png" click="onBoardMouseClick('n')"/>
				<s:Image source="assets/O.png" click="onBoardMouseClick('o')"/>
				<s:Image source="assets/Cl.png" click="onBoardMouseClick"/>
				<s:Image source="assets/F.png" click="onBoardMouseClick"/>
				<s:Image source="assets/Na.png" click="onBoardMouseClick"/>
			</s:HGroup>
			<s:HGroup horizontalAlign="center" verticalAlign="middle">
				<s:Image source="assets/P.png" click="onBoardMouseClick"/>
				<s:Image source="assets/S.png" click="onBoardMouseClick('s')" />
				<s:Image source="assets/K.png" click="onBoardMouseClick"/>
				<s:Image source="assets/Fe.png" click="onBoardMouseClick"/>
				<s:Image source="assets/Ni.png" click="onBoardMouseClick"/>
				<s:Image source="assets/Cu.png" click="onBoardMouseClick"/>
				<s:Image source="assets/Zn.png" click="onBoardMouseClick"/>
			</s:HGroup>
			<s:HGroup x="131" width="536" height="36" horizontalAlign="center">
				<s:Button id="done_btn" width="100" label="gotowe!" click="onReadyClick"/>
				<s:Button id="clear_btn" label="zacznij od nowa"/>
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>
</s:Application>

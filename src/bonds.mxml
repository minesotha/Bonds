<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:local="*"
			   width="800" height="650" minWidth="850" minHeight="650" backgroundColor="#779198"
			   pageTitle="Wiązania Chemiczne"
			   initialize="init()">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Image;
			import mx.core.BitmapAsset;
			import mx.managers.PopUpManager;
			
			import spark.components.TitleWindow;
			import spark.skins.spark.ImageSkin;
			
			
			private var isDown:Boolean;
			private var currTarget:Element;
			private var lastTarget:Element;
			private var startX:Number 
			private var startY:Number;
			private var isMoveMode:Boolean;
			private var punkty:Number;
			public var failText:String;
			
			public function init():void{
			//0field.addEventListener(MouseEvent.CLICK, onGlobalClick);
				punkty = 0;
				punkty_label.text ="Punkty: "+punkty;	
				isDown = false;
				isMoveMode = true;
			}
			
//			function onGlobalClick(){
//				field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
//				currTarget=null;
//				lastTarget=null;
//			}
			
			
			
			private function onBoardMouseClick(name:String):void{
				trace("clicked on ",name);
				
				if(currTarget!=null){
					currTarget.Unselect();
					currTarget = null;
				}
				if(lastTarget!=null){
					lastTarget.Unselect();
					lastTarget = null;
				}
				stage.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);
				var _source:String = "";
				var isFound:Boolean=true;
				
				_source= "assets/_"+name+".png";
				
				
				var img : Element = new Element(_source,name);
				img.addEventListener(MouseEvent.CLICK, ChooseElement);
				board.addChild(img as DisplayObject);
				
			}
		
			
			
			private function ChooseElement(e:MouseEvent){
				var target  = e.target.parent;
				if (target==null){
					currTarget.Unselect();
					currTarget = null;
					lastTarget.Unselect();
					lastTarget = null;
				}
				else if(target==currTarget){
					target.Unselect();
					currTarget=null;
					
				}
				else if(target==lastTarget){
					target.Unselect();
					currTarget=target;
				}
				else{
					
					
					if(lastTarget!=null){
						lastTarget.Unselect();
					}
					lastTarget=currTarget;
					currTarget  = target;
					currTarget.Select();
				}
				
				if(e.shiftKey){
					startDrawingBond();
					
				}
				else{
					isDown=true;
					field.addEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
					field.addEventListener(MouseEvent.MOUSE_UP, onElementMouseUp);
				}
			}
			
			
			
			/** przeciaganie pierwiastków */
			private function onMouseMove(e:MouseEvent):void
			{
				//	currTarget.RemoveAllBonds();
				
				if(currTarget == null){
					isDown=false;
					field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
				}
				if(isDown) {
					currTarget.x = board.mouseX-46;
					currTarget.y=board.mouseY-46;
					
					var bondCount = 0;
					for each (var bond:Bond  in currTarget.bonds){
						bond.graphics.clear();
						bond.graphics.lineStyle(5, 0x89D289, 1);
						bond.graphics.moveTo(bond.curr.x+20+bondCount, bond.curr.y+20+bondCount);
						bond.graphics.lineTo(bond.last.x+20+bondCount, bond.last.y+20+bondCount);
						bondCount+=10;
					}
				}
				
				
			}
			
			
			private function onElementMouseUp(e:MouseEvent):void{
				field.removeEventListener(MouseEvent.MOUSE_MOVE, onMouseMove);
				field.removeEventListener(MouseEvent.MOUSE_UP, onElementMouseUp);
				isDown=false;
				
				
			}
			
			
			
			private function startDrawingBond(){
				
				if(lastTarget!=null&& lastTarget!=currTarget && currTarget!=null){
					if(lastTarget.isAvalibleBonds() && currTarget.isAvalibleBonds()){
						var bond:Bond = new Bond(currTarget,lastTarget);
						board.addChildAt(bond, 0);
						bond.addEventListener(MouseEvent.CLICK, onBondClick);
					//	bond.Update();
						currTarget.Unselect();
						lastTarget.Unselect();
						currTarget = null;
						lastTarget = null;
						
					}
					else{
						trace("maximum bonds");
					}
				}
				
			}
			
			
			private function onBondClick(e:MouseEvent){
				var target = e.target as Bond;
				target.removeEventListener(MouseEvent.CLICK, onBondClick);
				target.RemoveElement();
			}
			
			private function onKeyDown(e:KeyboardEvent):void{
				
				if(e.keyCode==Keyboard.DELETE){
					DeleteCurrent();
					
				}
			}
			
			private function DeleteCurrent():void{
				if(currTarget!=null){
					currTarget.RemoveElement();
					currTarget=null;
				}
			}
			
			private function Check():void{
				var isLost = false;
				var arr:Array = [];
				for each (var elem in Element.allElements){
					arr.push(elem);								
				}
				var names = [];
				var currCount = [];
				var count = [];
				var bondCount = [];
				var elemCount=0;
				
				if(zadanie_label.text === "Kwas Siarkowy (IV) H2SO3"){
					names = ["s","o","h"];
					currCount = [0,0,0];
					count = [1,3,2];
					bondCount = [4,2,1];
					elemCount = 6;
				}
					
				else if(zadanie_label.text === "Kwas Siarkowy (VI) H2SO4"){
					names = ["s","o","h"];
					currCount = [0,0,0];
					count = [1,4,2];
					bondCount = [6,2,1];
					elemCount = 7;
				}
					
				else if(zadanie_label.text === "Kwas Azotowy (V) HNO2"){
					names = ["n","o","h"];
					currCount = [0,0,0];
					count = [1,3,1];
					bondCount = [5,2,1];
					elemCount = 5;
				}
					
				else if(zadanie_label.text === "Kwas Węglowy H2CO3"){
					names = ["c","o","h"];
					currCount = [0,0,0];
					count = [1,3,2];
					bondCount = [4,2,1];
					elemCount = 6;
				}
					
				else if(zadanie_label.text === "Kwas Siarkowodorowy H2S"){
					names = ["s","h"];
					currCount = [0,0];
					count = [1,2];
					bondCount = [2,1];
					elemCount = 3;
				}
					
				else if(zadanie_label.text === "Tlenek Żelaza (III) Fe2O3"){
					names = ["fe","o"];
					currCount = [0,0];
					count = [2,3];
					bondCount = [3,2];
					elemCount = 5;
				}
					
				else if(zadanie_label.text === "Tlenek Miedzi (I) Cu2O"){
					names = ["cu","o"];
					currCount = [0,0];
					count = [2,1];
					bondCount = [1,2];
					elemCount = 3;
				}
					
				else if(zadanie_label.text === "Chlorek Sodu NaCl"){
					names = ["na","cl"];
					currCount = [0,0];
					count = [1,1];
					bondCount = [1,1];
					elemCount = 2;
				}
					
				else if(zadanie_label.text === "Siarczek Potasu K2S"){
					names = ["k","s"];
					currCount = [0,0];
					count = [2,1];
					bondCount = [1,2];
					elemCount = 3;
				}
					
				else if(zadanie_label.text === "Tlenek Siarki (VI) SO3"){
					names = ["s","o"];
					currCount = [0,0];
					count = [1,3];
					bondCount = [6,2];
					elemCount = 4;
				}
				
				
				
				if(arr.length !=elemCount){
					failText=("Zła ilosc pierwiastkow");
					isLost = true;
				}
					
				else{
					trace("dobra ilosc pierwiastkow na planszy");
					var temp = []
					for each(var elem in arr){
						for(var i = 0; i<names.length; i++){
							if(elem.name ==names[i]){
								currCount[i]++;
								if(currCount[i]>count[i]){
									failText=("za duzo: "+ names[i]);
									isLost = true;
									break;
								}
								else if(elem.currBondCount != bondCount[i]){
									failText="Zła ilość wiązań dla: "+ names[i];
									isLost = true;
									break;
								}
							}
						}
						
					}
					
					for (var  i = 0; i<names.length;i++){
						if(count[i] != currCount[i]){
							failText=("Za mala ilość: "+ names[i]);
							
							isLost = true;
						}
					}
					
				}
				
				if ( isLost ==  false){
					trace("WYGRANA!");
				showWygranaDialog();
					punkty++;
					punkty_label.text = "Punkty: "+ punkty;
					getLabel();
					Clear();
					
				}
				else {
					showPrzegranaDialog();
					punkty--;
					punkty_label.text = "Punkty: "+ punkty;
				}
				
			}
			
			
			public function showWygranaDialog():void{
				var helpWindow:TitleWindow=
					PopUpManager.createPopUp(this, Wygrana, true) as TitleWindow;
				PopUpManager.centerPopUp(helpWindow);
				//	buildDeskDlg.visible=true;
			}
			
			public function showPrzegranaDialog():void{
				var helpWindow:TitleWindow=
					PopUpManager.createPopUp(this, Przegrana, true) as TitleWindow;
				PopUpManager.centerPopUp(helpWindow);
				//	buildDeskDlg.visible=true;
			}
			
			protected function Clear(){
				while(board.numChildren>0){
					var elem = board.getChildAt(0);
					elem.RemoveElement();			
				}
				
			}
			
						var arr = ['Tlenek Siarki (VI) SO3',
						'Siarczek Potasu K2S',
						'Chlorek Sodu NaCl',
						'Tlenek Miedzi (I) Cu2O',
						'Tlenek Żelaza (III) Fe2O3',
						'Kwas Siarkowodorowy H2S',
						'Kwas Węglowy H2CO3',
						'Kwas Azotowy (V) HNO2',
						'Kwas Siarkowy (VI) H2SO4',
						'Kwas Siarkowy (IV) H2SO3'];
					
					var namesArr:ArrayCollection = new ArrayCollection(arr);
			
				protected function getLabel(){
					
						
					if(namesArr.length>0){
					
					var i  =Math.round(Math.random()*(namesArr.length-1));
					zadanie_label.text = namesArr[i];
					namesArr.removeItemAt(i);
					}
					else{
						zadanie_label.text = "Koniec równań!";
					}
				}
			
			
		]]>
	</fx:Script>
	
	
	<s:BorderContainer left="0" right="0" top="10" bottom="0" horizontalCenter="0" verticalCenter="0" initialize="init">
		<s:VGroup left="0" right="0" top="0" bottom="0" horizontalAlign="center" horizontalCenter="0"
				  verticalAlign="top" verticalCenter="0">
			<s:Label id="zadanie_label" x="100" width="598" height="30" fontFamily="Arial" fontSize="16"
					 fontWeight="bold" text='' textAlign="center" verticalAlign="middle" preinitialize="getLabel()"/>
			<s:HGroup id="field" x="191" width="600" height="400" horizontalAlign="right"
					  verticalAlign="bottom">
				<local:Main id="board" width="600" height="400">
				</local:Main>
				<s:Image width="64" height="64" click="DeleteCurrent()" source="assets/bin.png"/>
			</s:HGroup>
			<s:HGroup id="imgGroup" x="165" horizontalAlign="center" verticalAlign="middle">
				<s:Image source="assets/H.png" click="onBoardMouseClick('h')"/>
				<s:Image source="assets/C.png" click="onBoardMouseClick('c')"/>
				<s:Image source="assets/N.png" click="onBoardMouseClick('n')"/>
				<s:Image source="assets/O.png" click="onBoardMouseClick('o')"/>
				<s:Image source="assets/Cl.png" click="onBoardMouseClick('cl')"/>
				<s:Image source="assets/F.png" click="onBoardMouseClick('f')"/>
				<s:Image source="assets/Na.png" click="onBoardMouseClick('na')"/>
			</s:HGroup>
			<s:HGroup horizontalAlign="center" verticalAlign="middle">
				<s:Image source="assets/P.png" click="onBoardMouseClick('p')"/>
				<s:Image source="assets/S.png" click="onBoardMouseClick('s')" />
				<s:Image source="assets/K.png" click="onBoardMouseClick('k')"/>
				<s:Image source="assets/Fe.png" click="onBoardMouseClick('fe')"/>
				<s:Image source="assets/Ni.png" click="onBoardMouseClick('ni')"/>
				<s:Image source="assets/Cu.png" click="onBoardMouseClick('cu')"/>
				<s:Image source="assets/Zn.png" click="onBoardMouseClick('zn')"/>
			</s:HGroup>
			<s:HGroup x="131" width="536" height="23" horizontalAlign="center">
				<s:Button id="done_btn" width="100" label="gotowe!" chromeColor="#64FB21"
						  click="Check()" color="#2A4A2D" focusColor="#206A7C" fontFamily="Arial"
						  fontWeight="bold"/>
				<s:Button id="clear_btn" label="zacznij od nowa" chromeColor="#F6AC0C"
						  click="Clear()" color="#535714" focusColor="#1E405F" fontWeight="bold"/>
				<s:Label id="punkty_label" x="338" width="83" height="23" chromeColor="#9E8D8D"
						 color="#FF3600" fontFamily="Arial" fontSize="16" fontWeight="bold"
						 text="Punkty: " textAlign="left" verticalAlign="middle"/>
			</s:HGroup>
			<s:HGroup width="536" height="23" horizontalAlign="center">
				<s:Label fontFamily="Arial" fontSize="12" fontStyle="italic"
						 text="Przytrzymaj klawisz SHIFT, aby dodać wiązanie pomiędzy pierwiastkami." textAlign="center"
						 verticalAlign="middle"/>
			</s:HGroup>
		</s:VGroup>
	</s:BorderContainer>
</s:Application>